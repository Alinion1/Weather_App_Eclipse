package application;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;

import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.URI;
import java.net.URL;
import java.util.Scanner;

import javafx.fxml.FXML;
import javafx.scene.control.TextField;
import javafx.scene.text.Text;

public class Controller {
	
    @FXML
    private TextField locationTxt;
    private Text temperature;
    private Text humidity;
    private Text wind;
    private Text cl;
    private String locationSvd = ""; 
    
    
    
    
    private final String weatherAPIString="";

    @FXML
    
    private static HttpURLConnection fetchApiResponse(String urlString) {
    	try {
			// attempt to create connection
    		URL url=new URI(urlString).toURL();
    		HttpURLConnection connection=(HttpURLConnection) url.openConnection();
    		connection.setRequestMethod("GET");
    		
    		return connection;
    		
		} catch (Exception e) {
			e.printStackTrace();
		}
    	return null;
    }

    private static String readApiResponse(HttpURLConnection apiConnection) {
    	try {
			StringBuilder resultJsonBuilder=new StringBuilder();
			Scanner scanner=new Scanner(apiConnection.getInputStream());
			
			while(scanner.hasNext()) {
				resultJsonBuilder.append(scanner.nextLine());
			}
			
			scanner.close();
			
			return resultJsonBuilder.toString();
			
		} catch (Exception e) {
			e.printStackTrace();
		}
    }
    
    
    public static JSONObject getLocationData(String locationSvd) {
    	locationSvd=locationSvd.replaceAll(" ","+");
    
    	String urlString="https://geocoding-api.open-meteo.com/v1/search?name="+locationSvd+"&count=1&language=en&format=json";
    	
    	try {
			HttpURLConnection apiConnection= fetchApiResponse(urlString);
			
			if(apiConnection.getResponseCode()!= 200) {
				System.out.println("Error: COuld not connect to API");
				return null;
			}
    		
			String jSONResponseString=readApiResponse(apiConnection);
			
		} catch (Exception e) {
			// TODO: handle exception
		}
    	
    }
    
    
    private void handleSave() {
    	try {
    	locationSvd = locationTxt.getText();
    	
    	//get location data
    	  JSONObject cityLocationDataJsonObject=(JSONObject)getLocationData(locationSvd);
    	  
    	  double latitude=(double)cityLocationDataJsonObject.get("latitude");
    	  double longitude=(double)cityLocationDataJsonObject.get("longitude");
    	  
    	  displayWeatherData(latitude,longitude);  
    	  
    	
        System.out.println("Text salvat: " + locationSvd); 
        locationTxt.clear();
        
    	}catch(Exception e) {
    		e.printStackTrace();
    	}
    }
    
    public String getSavedText() {
        return locationSvd;
    }
}
